(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{453:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),s("p",[t._v("虚拟线程（Virtual Threads）是JDK 21 中引入一项重要变革，旨在简化高吞吐量并发应用的开发，并提高性能。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("平台线程 Platform Thread")]),t._v(": 由 JVM 映射到操作系统线程的，One Thread = One OS Thread")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Virtual Threads")]),t._v(": Java 线程（java.lang.Thread）的一个新实现方式，而不是新概念 —— 你仍然用 Thread 编程，但可以选择它是“虚拟的”还是“平台的”。")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("平台线程 (Thread)")]),t._v(" "),s("th",[t._v("虚拟线程 (Virtual Thread)")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("实现层级")]),t._v(" "),s("td",[t._v("操作系统线程")]),t._v(" "),s("td",[t._v("JVM 管理的轻量级线程")])]),t._v(" "),s("tr",[s("td",[t._v("内存开销")]),t._v(" "),s("td",[t._v("~1MB 栈内存")]),t._v(" "),s("td",[t._v("初始仅 ~200 字节")])]),t._v(" "),s("tr",[s("td",[t._v("创建数量")]),t._v(" "),s("td",[t._v("通常几百个")]),t._v(" "),s("td",[t._v("数百万个")])]),t._v(" "),s("tr",[s("td",[t._v("阻塞成本")]),t._v(" "),s("td",[t._v("高（涉及OS调度）")]),t._v(" "),s("td",[t._v("极低（JVM管理）")])]),t._v(" "),s("tr",[s("td",[t._v("调度方式")]),t._v(" "),s("td",[t._v("OS 线程调度器")]),t._v(" "),s("td",[t._v("JVM 调度")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-最佳实践"}},[t._v("#")]),t._v(" 2. 最佳实践")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("适用场景")]),t._v(" "),s("th",[t._v("不适用场景")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("高并发 REST 请求处理 —> 可为每个请求分配一个虚拟线程")]),t._v(" "),s("td",[t._v("CPU密集型任务")])]),t._v(" "),s("tr",[s("td",[t._v("大量并发任务，如爬虫 —> 可同时运行数万甚至百万任务")]),t._v(" "),s("td",[t._v("长时间运行的 synchronized 块")])]),t._v(" "),s("tr",[s("td",[t._v("阻塞 I/O 密集场景，如数据库访问 —> 不阻塞平台线程，提升吞吐量")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("替代复杂的异步编程（CompletableFuture） —> 用同步方式写异步逻辑")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"_3-使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用方式"}},[t._v("#")]),t._v(" 3. 使用方式")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传统线程池（限制并发量）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" pool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newFixedThreadPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换成虚拟线程（无并发限制）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" vPool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newVirtualThreadPerTaskExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 小心使用 ThreadLocal，尽量用 ScopedValue 替代")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScopedValue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USER_ID")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScopedValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScopedValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USER_ID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USER_ID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 网络 I/O，使用 HttpClient（JDK 11+）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorService")]),t._v(" executor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Executors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newVirtualThreadPerTaskExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nexecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虽然是多线程，但写法像同步的")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" httpClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 性能调优建议")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Djdk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("virtualThreadScheduler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parallelism"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认: CPU 核心数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Djdk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("virtualThreadScheduler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxPoolSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Djdk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tracePinnedThreads"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("short")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监控固定情况")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-springboot"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-springboot"}},[t._v("#")]),t._v(" 4. Springboot")]),t._v(" "),s("p",[t._v("升级到 3.2.x+")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("threads")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("virtual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启虚拟线程")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);