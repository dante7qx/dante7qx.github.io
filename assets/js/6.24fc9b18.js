(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{351:function(t,a,s){t.exports=s.p+"assets/img/CoinBaseTotal.4b3b94b1.png"},352:function(t,a,s){t.exports=s.p+"assets/img/calBH.b3be89be.png"},353:function(t,a,s){t.exports=s.p+"assets/img/Bitcoin.15eba679.png"},354:function(t,a,s){t.exports=s.p+"assets/img/kuang1.b40a4b6b.png"},355:function(t,a,s){t.exports=s.p+"assets/img/kuang2.5251a82a.png"},427:function(t,a,s){"use strict";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一-什么是比特币"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是比特币"}},[t._v("#")]),t._v(" 一. 什么是比特币")]),t._v(" "),a("p",[t._v("比特币是一种 P2P 形式的数字加密货币，基于区块链的一种应用形式。")]),t._v(" "),a("h2",{attrs:{id:"二-挖矿"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-挖矿"}},[t._v("#")]),t._v(" 二. 挖矿")]),t._v(" "),a("p",[t._v("由于必须保证节点之间的同步，所以新区块的添加速度不能太快。试想一下，你刚刚同步了一个区块，准备基于它生成下一个区块，但这时别的节点又有新区块生成，你不得不放弃做了一半的计算，再次去同步。\n因为每个区块的后面，只能跟着一个区块，你永远只能在最新区块的后面，生成下一个区块。所以，你别无选择，一听到信号，就必须立刻同步。")]),t._v(" "),a("p",[a("strong",[t._v("挖矿")]),t._v("：将新的交易打包成一个新的区块。")]),t._v(" "),a("p",[a("strong",[t._v("矿工")]),t._v("：在比特币的P2P网络中，有一类节点，它们时刻不停地进行计算，试图把新的交易打包成新的区块并附加到区块链上，这类节点就是矿工。")]),t._v(" "),a("p",[a("strong",[t._v("为什么要挖矿")]),t._v("：因为每打包一个新的区块，打包该区块的矿工可以获取"),a("code",[t._v("被打包交易中的手续费")]),t._v("以及一笔"),a("code",[t._v("比特币奖励")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("比特币的数量")]),t._v("：区块链的发明者中本聪规定，平均每10分钟，全网才能生成一个新区块，一小时也就六个。挖矿成功的矿工会获得50（每过4年减半）个比特币，所以总数计算如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(351),alt:"总数"}})]),t._v(" "),a("h2",{attrs:{id:"三-挖矿原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-挖矿原理"}},[t._v("#")]),t._v(" 三. 挖矿原理")]),t._v(" "),a("p",[t._v("比特币的挖矿原理就是一种工作量证明机制。工作就是通过计算机计算数学问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:s(352),alt:"区块哈希"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(353),alt:"BitCoin"}})]),t._v(" "),a("p",[a("strong",[t._v("数学问题")]),t._v("：不断尝试计算区块的哈希，直到计算出一个特定的哈希值，它比目标值要小。")]),t._v(" "),a("p",[a("strong",[t._v("目标值（target）")]),t._v("：目标值是一个大整数，表示挖矿过程中哈希值必须满足的条件，即哈希值的二进制表示中必须有多少个前导零，目标难度值是由Bits字段来计算的。")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("target")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("coefficient * 256^(exponent – 3) = 系数 * 256^(幂 - 3)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("target")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("target * (actual time / expect time)  ## 预期时间：每挖2016个区块后，调整一次")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Bits")]),t._v("：表示目标难度值的编码形式，十六进制。用于表示前导零的个数和目标哈希值中的非零部分。具体来说，Bits字段的高位字节表示前导零的个数，低位字节表示目标哈希值中的非零部分。例如，如果前导零的个数为 20，目标哈希值的非零部分为 0x1A2B3C4D，那么对应的Bits字段的值将是 0x14000000。")]),t._v(" "),a("ul",[a("li",[t._v("幂：前2位十六进制数字")]),t._v(" "),a("li",[t._v("系数：后6位十六进制数字")])]),t._v(" "),a("p",[a("strong",[t._v("难度（difficulty）")]),t._v("：为了使区块哈希小于某个目标值（target），平均要尝试的计算次数。反映了矿工找到下一个有效区块的难易程度，难度随区块头目标值（target）的变动而变动，target值越小，难度越大。")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("difficulty")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("(创世区块目标值Target) / 当前目标值 = (0x00ffff * 256 ^ 26）/ target")]),t._v("\n")])])]),a("p",[a("strong",[t._v("工作量计数器（Nonce）")]),t._v(" 计算区块哈希时，头部信息除了"),a("code",[t._v("Nonce")]),t._v("都是固定不变的。挖矿就是不断的调整"),a("code",[t._v("Nonce")]),t._v("(随机数)来计算出满足要求的区块哈希。")]),t._v(" "),a("h2",{attrs:{id:"四-最长链原则-共识算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-最长链原则-共识算法"}},[t._v("#")]),t._v(" 四. 最长链原则（共识算法）")]),t._v(" "),a("p",[t._v("如果两个矿工在同一时间各自找到了有效区块，注意，这两个区块是不同的，因为coinbase交易不同，所以Merkle Hash不同，区块哈希也不同。但它们只要符合难度值，就都是有效的。")]),t._v(" "),a("p",[a("img",{attrs:{src:s(354),alt:"分叉"}})]),t._v(" "),a("p",[t._v("在分叉的情况下，有的矿工在绿色的分叉上继续挖矿，有的矿工在蓝色的分叉上继续挖矿。最终，总有一个分叉首先挖到后续区块，这个时候，由于比特币网络采用最长分叉的共识算法，绿色分叉胜出，蓝色分叉被废弃，整个网络上的所有矿工又会继续在最长的链上继续挖矿。")]),t._v(" "),a("p",[a("img",{attrs:{src:s(355),alt:"分叉"}})]),t._v(" "),a("p",[t._v("由于区块链虽然最终会保持数据一致，但是，一个交易可能被打包到一个后续被孤立的区块中。所以，要确认一个交易被永久记录到区块链中，需要对交易进行确认。如果后续的区块被追加到区块链上，实际上就会对原有的交易进行确认，因为链越长，修改的难度越大。一般来说，经过6个区块确认的交易几乎是不可能被修改的。")])])}),[],!1,null,null,null);a.default=r.exports}}]);