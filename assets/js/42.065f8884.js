(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{429:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一-使用this-router-push-进行a-b-b-a-跳转保持原页面的页码状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-使用this-router-push-进行a-b-b-a-跳转保持原页面的页码状态"}},[t._v("#")]),t._v(" 一. 使用this.router.push()进行A-B，B-A 跳转保持原页面的页码状态")]),t._v(" "),s("p",[t._v("我们从A页面使用"),s("code",[t._v('this.router.push("/page/b")')]),t._v("跳转至B页面后，关闭B页面会通过"),s("code",[t._v("this.$router.go(-1)")]),t._v(" 跳转回A页面，这时候我们会发现A页面页码变成了第一页。")]),t._v(" "),s("p",[t._v("项目需求是修改完毕之后再回来A页面时保持与跳转前一样的页码。处理方式如下：")]),t._v(" "),s("p",[t._v("A页面中：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转到B页面的方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showPageB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  sessionStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queryParams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 业务逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dom元素渲染前获取之前的页码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sessionStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queryParams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sessionStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sessionStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 业务逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"二-vue-响应式原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-vue-响应式原理"}},[t._v("#")]),t._v(" 二. Vue 响应式原理")]),t._v(" "),s("p",[t._v("详情请查看官网："),s("a",{attrs:{href:"",target:"_blank"}},[t._v("https://v2.cn.vuejs.org/v2/guide/reactivity.html")])]),t._v(" "),s("p",[t._v("由于 JavaScript 的限制，Vue 不能检测数组和对象的变化。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("对象： "),s("code",[t._v("this.$set(object, propertyName, value)")])])]),t._v(" "),s("li",[s("p",[t._v("数组："),s("code",[t._v("this.$set(arr, indexOfArr, newValue)")])])]),t._v(" "),s("li",[s("p",[t._v("Vue 不允许动态添加根级响应式 property，所以你必须在初始化实例前声明所有根级响应式 property，哪怕只是一个空值。")])]),t._v(" "),s("li",[s("p",[t._v("Vue 在更新 DOM 时是异步执行，当你设置 vm.someData = 'new value'，该组件不会立即重新渲染。\n如果你想基于更新后的 DOM 状态来做点什么，可以在数据变化之后立即使用 Vue.nextTick(callback)。这样回调函数将在 DOM 更新完成后被调用。")])])]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("Vue.component('example', {\n  template: '"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{ message }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("',\n  data: function () {\n    return {\n      message: '未更新'\n    }\n  },\n  methods: {\n    updateMessage: function () {\n      this.message = '已更新'\n      console.log(this.$el.textContent) // => '未更新'\n      this.$nextTick(function () {\n        console.log(this.$el.textContent) // => '已更新'\n      })\n    }\n  }\n})\n")])])]),s("h2",{attrs:{id:"三-和-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-和-区别"}},[t._v("#")]),t._v(" 三. == 和 === 区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("== 和 === 都是用于比较两个值是否相等的操作符。== 会进行类型转换，=== 不会进行类型转换。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('5 == "5" // 返回 true，因为值相等，尽管类型不同')])]),t._v(" "),s("li",[s("p",[t._v('5 === "5" // 返回 false，因为值相等，类型不同')])])])]),t._v(" "),s("li",[s("p",[t._v("!= 和 !== 都是用于比较两个值是否不相等的操作符。!= 会进行类型转换，!== 不会进行类型转换。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('5 != "5" // 返回 false，因为值相等，尽管类型不同')])]),t._v(" "),s("li",[s("p",[t._v('5 !== "5" // 返回 true，因为值相等，类型不同')])])])])]),t._v(" "),s("h2",{attrs:{id:"四-三元运算符和双重非运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四-三元运算符和双重非运算符"}},[t._v("#")]),t._v(" 四. 三元运算符和双重非运算符")]),t._v(" "),s("p",[t._v("在 JavaScript/TypeScript 中，将变量值转换为布尔类型的表达方式由两种。例如:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有值（非 falsy 值），则返回 true，否则返回 false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用两个逻辑非运算符 !! 将 this.pageId 转换为布尔值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个逻辑非运算符将任意值转换为其对应的布尔值，第二个逻辑非运算符则将其再次取反，达到同样的效果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageId   \n")])])]),s("p",[t._v("通常使用 !! 的形式更为简洁和常见")])])}),[],!1,null,null,null);s.default=e.exports}}]);