(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{461:function(t,n,a){"use strict";a.r(n);var s=a(8),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("在Spring框架中，@Conditional 注解用于实现条件化配置。这意味着根据特定条件是否满足，决定是否创建某个Bean或应用某个配置类。")]),t._v(" "),n("p",[t._v("这是Spring中的一个非常强大的特性，它允许开发者根据环境、存在性或其他逻辑动态地控制Bean的创建和配置的应用。")]),t._v(" "),n("p",[n("strong",[t._v("适用于：")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("按环境加载配置（Dev/Prod）")])]),t._v(" "),n("li",[n("p",[t._v("按依赖库是否存在启用功能")])]),t._v(" "),n("li",[n("p",[t._v("动态开关模块（如 Feature Flags）")])]),t._v(" "),n("li",[n("p",[t._v("兼容不同部署环境（Cloud/Local）")])]),t._v(" "),n("li",[n("p",[t._v("自定义 spring-boot-starter")])])]),t._v(" "),n("p",[n("strong",[t._v("需要掌握的注解：")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("@Profile")]),t._v("：基于Spring profiles进行条件匹配。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnProperty")]),t._v("：基于配置文件（如 application.yml）中的属性值进行条件匹配。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnClass")]),t._v("：仅当指定的类在classpath上可用时才生效。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnMissingClass")]),t._v("：仅当指定的类不在classpath上时才生效。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnBean")]),t._v("：当容器中存在指定 Bean 时生效。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnMissingBean")]),t._v("：容器中不存在指定 Bean 时生效。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnWebApplication")]),t._v("：仅在Web环境中条件生效。")]),t._v(" "),n("li",[n("code",[t._v("@ConditionalOnExpression")]),t._v("：通过 SpEL 表达式控制条件。")])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConditionalOnClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.SomeLibrary"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeLibraryBean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("someLibraryBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConditionalOnBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcTemplate")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jdbcTemplate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConditionalOnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefix "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cache.enabled"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" havingValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CacheManager")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cacheManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @ConditionalOnProperty 用于 条件化加载，而 @ConfigurationProperties 用于 绑定配置到对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableConfigurationProperties")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpiritDemoProperties")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConditionalOnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        prefix "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spirit.demo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置项的前缀")]),t._v("\n        name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enabled"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// spirit.demo.enabled=true → 条件成立，Bean 会被加载")]),t._v("\n        havingValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配的目标值")]),t._v("\n        matchIfMissing "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 未定义该属性，条件仍成立（Bean 会被加载）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ConditionalOnExpression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"#{environment.getProperty('app.mode') == 'prod'\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("调试技巧:")]),t._v(" "),n("code",[t._v("debug=true")])])])}),[],!1,null,null,null);n.default=e.exports}}]);